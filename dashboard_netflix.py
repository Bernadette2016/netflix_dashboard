# -*- coding: utf-8 -*-
"""Dashboard_Netflix.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xmkHRGDI9rEmMgQjr0tBmlxv0mxj2POU
"""

import streamlit as st
import pandas as pd
import altair as alt
import matplotlib.pyplot as plt
import textwrap
import seaborn as sns
from collections import Counter
import plotly.express as px
import numpy as np
import warnings
warnings.simplefilter(action='ignore', category=FutureWarning)

st.set_page_config(
    page_title="Netflix Movies and TV Shows",
    page_icon="ðŸŽ¬",
    layout="wide",
    initial_sidebar_state="expanded")

df = pd.read_csv('netflix_titles.csv')
df['date_added'] = pd.to_datetime(df['date_added'], format='mixed', errors='coerce')
df['year_added'] = df['date_added'].dt.year

movies = df[df['type'] == 'Movie'].copy()
tv_shows = df[df['type'] == 'TV Show'].copy()

st.sidebar.title("Netflix Dashboard")
st.sidebar.markdown("---")

# Add theme selection to the sidebar
theme = st.sidebar.selectbox("Select Theme", ["Light", "Dark"])

if theme == "Dark":
    st.markdown("""
    <style>
    .stApp {
        background-color: #1e1e1e;
        color: white;
    }
    </style>
    """, unsafe_allow_html=True)
elif theme == "Light":
    st.markdown("""
    <style>
    .stApp {
        background-color: white;
        color: black;
    }
    </style>
    """, unsafe_allow_html=True)

st.sidebar.header("Filters")

# Create 2 columns
col1, col2 = st.columns(2)

# Row 1
with col1:
    import plotly.graph_objects as go
    type_counts = df['type'].value_counts()
    fig = go.Figure(data=[go.Pie(labels=type_counts.index, values=type_counts.values, hole=.3)])
    fig.update_layout(title_text="Distribution of Content Types", title_x=0.5)
    st.plotly_chart(fig)

with col2:
    content_added_per_year = df.groupby(['year_added', 'type']).size().unstack(fill_value=0)
    st.subheader("Trend of Movies and TV Shows Added Over Time")
    fig = px.line(
        content_added_per_year.reset_index(),
        x='year_added',
        y=['Movie', 'TV Show'],
        labels={'year_added': 'Year', 'value': 'Number of Content Added'},
        title='Trend of Movies and TV Shows Added Over Time'
    )
    st.plotly_chart(fig)

# Row 2
with col1:
with col1:
    df.replace([np.inf, -np.inf], np.nan, inplace=True)
    df = df.dropna(subset=['release_year'])

    st.subheader("Distribution of Release Year")

    fig, ax = plt.subplots(figsize=(10, 5))
    sns.histplot(df['release_year'], color='green', bins=30, kde=False, ax=ax)
    ax.set_title('Distribution of Release Year')
    ax.set_xlabel('Release Year')
    ax.set_ylabel('Movie Count')
    st.pyplot(fig)


with col2:
    st.subheader("Distribution of Ratings")
    plt.figure(figsize=(12, 6))
    sns.countplot(x='rating', data=df)
    plt.title('Distribution of Ratings')
    plt.xlabel('Rating')
    plt.ylabel('Number of Titles')
    plt.xticks(rotation=45)
    st.pyplot(plt)

# Row 3
with col1:
    genre_counts = df['listed_in'].str.split(', ', expand=True).stack().value_counts()
    top_genres = genre_counts.head(10)

    st.subheader("Top 10 Genres")
    fig = px.bar(
        x=top_genres.index,
        y=top_genres.values,
        labels={'x': 'Genre', 'y': 'Number of Titles'},
        title='Top 10 Genres on Netflix',
    )
    fig.update_xaxes(tickangle=45)
    st.plotly_chart(fig)

with col2:
    st.subheader("Top 10 Directors with Most Titles on Netflix")
    plt.figure(figsize=(12, 6))
    sns.countplot(x='director', data=df, order=df['director'].value_counts().index[:10], palette='viridis')
    plt.title('Top 10 Directors with Most Titles on Netflix')
    plt.xlabel('Director')
    plt.ylabel('Number of Titles')
    plt.xticks(rotation=45)
    st.pyplot(plt)

# Row 4
with col1:
    st.subheader("Top 10 Countries with Most Titles on Netflix")
    plt.figure(figsize=(12, 6))
    sns.countplot(x='country', data=df, order=df['country'].value_counts().index[:10], palette='viridis')
    plt.title('Top 10 Countries with Most Titles on Netflix')
    plt.xlabel('Country')
    plt.ylabel('Number of Titles')
    plt.xticks(rotation=45)
    st.pyplot(plt)

with col2:
    st.subheader("Relationship between Release Year and Rating")
    fig = plt.figure(figsize=(12, 6))
    sns.boxplot(x='rating', y='release_year', data=df)
    plt.title('Relationship between Release Year and Rating')
    plt.xlabel('Rating')
    plt.ylabel('Release Year')
    plt.xticks(rotation=45)
    st.pyplot(fig)
