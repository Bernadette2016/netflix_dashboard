# -*- coding: utf-8 -*-
"""Dashboard_Netflix.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xmkHRGDI9rEmMgQjr0tBmlxv0mxj2POU
"""

import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go

# Load data
df = pd.read_csv('netflix_titles.csv')

# Preprocessing
df['release_year'] = pd.to_numeric(df['release_year'], errors='coerce')
df['year_added'] = pd.to_datetime(df['date_added']).dt.year

# Sidebar - Title
st.sidebar.title("Netflix Dashboard")
st.sidebar.markdown("---")

# Sidebar - Theme selection
theme = st.sidebar.selectbox("Select Theme", ["Light", "Dark"])

if theme == "Dark":
    st.markdown("""
    <style>
    .stApp {
        background-color: #1e1e1e;
        color: white;
    }
    </style>
    """, unsafe_allow_html=True)
elif theme == "Light":
    st.markdown("""
    <style>
    .stApp {
        background-color: white;
        color: black;
    }
    </style>
    """, unsafe_allow_html=True)

# Sidebar - Filters
st.sidebar.header("Filters")

type_filter = st.sidebar.multiselect(
    "Select Content Type:",
    options=df['type'].dropna().unique(),
    default=df['type'].dropna().unique()
)

country_filter = st.sidebar.multiselect(
    "Select Country:",
    options=df['country'].dropna().unique(),
    default=df['country'].dropna().unique()
)

year_min = int(df['release_year'].min())
year_max = int(df['release_year'].max())
year_range = st.sidebar.slider(
    "Select Release Year Range:",
    min_value=year_min,
    max_value=year_max,
    value=(year_min, year_max)
)

# Apply filters
df_filtered = df[
    (df['type'].isin(type_filter)) &
    (df['country'].isin(country_filter)) &
    (df['release_year'].between(year_range[0], year_range[1]))
]

# Create 2 columns layout
col1, col2 = st.columns(2)

# Row 1
with col1:
    st.subheader("Distribution of Content Types")
    type_counts = df_filtered['type'].value_counts()
    fig = go.Figure(data=[go.Pie(labels=type_counts.index, values=type_counts.values, hole=.3)])
    fig.update_layout(title_text="Distribution of Content Types", title_x=0.5)
    st.plotly_chart(fig)

with col2:
    st.subheader("Trend of Movies and TV Shows Added Over Time")
    content_added_per_year = df_filtered.groupby(['year_added', 'type']).size().unstack(fill_value=0)
    fig = px.line(
        content_added_per_year.reset_index(),
        x='year_added',
        y=['Movie', 'TV Show'],
        labels={'year_added': 'Year', 'value': 'Number of Content Added'},
        title='Trend of Movies and TV Shows Added Over Time'
    )
    st.plotly_chart(fig)

# Row 2
with col1:
    st.subheader("Distribution of Release Year")
    fig, ax = plt.subplots(figsize=(10, 5))
    sns.histplot(df_filtered['release_year'], color='green', bins=30, kde=False, ax=ax)
    ax.set_title('Distribution of Release Year')
    ax.set_xlabel('Release Year')
    ax.set_ylabel('Movie Count')
    st.pyplot(fig)

with col2:
    st.subheader("Distribution of Ratings")
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.countplot(x='rating', data=df_filtered, order=df_filtered['rating'].value_counts().index)
    ax.set_title('Distribution of Ratings')
    ax.set_xlabel('Rating')
    ax.set_ylabel('Number of Titles')
    plt.xticks(rotation=45)
    st.pyplot(fig)

# Row 3
with col1:
    st.subheader("Top 10 Genres")
    genre_counts = df_filtered['listed_in'].str.split(', ', expand=True).stack().value_counts()
    top_genres = genre_counts.head(10)
    fig = px.bar(
        x=top_genres.index,
        y=top_genres.values,
        labels={'x': 'Genre', 'y': 'Number of Titles'},
        title='Top 10 Genres on Netflix',
    )
    fig.update_xaxes(tickangle=45)
    st.plotly_chart(fig)

with col2:
    st.subheader("Top 10 Directors with Most Titles on Netflix")
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.countplot(x='director', data=df_filtered, order=df_filtered['director'].value_counts().index[:10], palette='viridis')
    ax.set_title('Top 10 Directors with Most Titles on Netflix')
    ax.set_xlabel('Director')
    ax.set_ylabel('Number of Titles')
    plt.xticks(rotation=45)
    st.pyplot(fig)

# Row 4
with col1:
    st.subheader("Top 10 Countries with Most Titles on Netflix")
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.countplot(x='country', data=df_filtered, order=df_filtered['country'].value_counts().index[:10], palette='viridis')
    ax.set_title('Top 10 Countries with Most Titles on Netflix')
    ax.set_xlabel('Country')
    ax.set_ylabel('Number of Titles')
    plt.xticks(rotation=45)
    st.pyplot(fig)

with col2:
    st.subheader("Relationship between Release Year and Rating")
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.boxplot(x='rating', y='release_year', data=df_filtered)
    ax.set_title('Relationship between Release Year and Rating')
    ax.set_xlabel('Rating')
    ax.set_ylabel('Release Year')
    plt.xticks(rotation=45)
    st.pyplot(fig)
